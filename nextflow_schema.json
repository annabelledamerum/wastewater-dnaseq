{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/Zymo-Research/aladdin-shotgun/main/nextflow_schema.json",
    "title": "Aladdin shotgun pipeline parameters",
    "description": "Taxonomic profiling of shotgun metagenomic data",
    "compatible_clouds": ["awsbatch", "zymohpc"],
    "metadata_columns": {
        "type": "object",
        "properties": {
            "group": {
                "type": "string",
                "description": "Group labels for diversity comparison between groups. Leave empty if not applicable. Alphanumerical characters only, must start with letters.",
                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
            }
        }
    },
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["design", "database", "outdir"],
            "properties": {
                "design": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv)$",
                    "description": "Path to comma-separated file containing information about the samples and libraries/runs.",
                    "help_text": "You will need to create a design file with information about the samples and libraries/runs you want to running in your pipeline run. Use this parameter to specify its location. It has to be a comma-separated file with 6 columns, and a header row. See [usage docs](https://nf-co.re/taxprofiler/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv",
                    "hidden": true
                },
                "database": {
                    "type": "string",
                    "description": "Select the reference database and the tool you would like to use for taxonomic profiling. Your choice will dictate the ranking and nomenclature of the taxonomy profile. We provide several popular reference databases to choose from, but recommend the sourmash-compatible database from Zymo Research.",
                    "enum": ["sourmash-zymo-2024", "metaphlan4-db", "sourmash-zymo-2023"],
                    "default": "sourmash-zymo-2024"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                }
            }
        },
        "preprocessing_general_qc_options": {
            "title": "Preprocessing general QC options",
            "type": "object",
            "description": "Common options across both long and short read preprocessing QC steps",
            "default": "",
            "properties": {
                "preprocessing_qc_tool": {
                    "type": "string",
                    "default": "fastqc",
                    "enum": ["fastqc", "falco"],
                    "help_text": "Falco is designed as a drop-in replacement for FastQC but written in C++ for faster computation. We particularly recommend using falco when using long reads (due to reduced memory constraints), however is also applicable for short reads.",
                    "description": "Specify the tool used for quality control of raw sequencing reads",
                    "fa_icon": "fas fa-tools",
                    "hidden": true
                },
                "save_preprocessed_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save reads from samples that went through the adapter clipping, pair-merging, and length filtering steps for both short and long reads",
                    "help_text": "This saves the FASTQ output from the following tools:\n\n- fastp\n- AdapterRemoval\n- Porechop\n- Filtlong\n\nThese reads will be a mixture of: adapter clipped, quality trimmed, pair-merged, and length filtered, depending on the parameters you set.",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-users-cog"
        },
        "preprocessing_short_read_qc_options": {
            "title": "Preprocessing short-read QC options",
            "type": "object",
            "description": "Options for adapter clipping, quality trimming, pair-merging, and complexity filtering",
            "default": "",
            "properties": {
                "shortread_qc_tool": {
                    "type": "string",
                    "default": "fastp",
                    "enum": ["fastp", "adapterremoval", "DO_NOT_RUN"],
                    "fa_icon": "fas fa-tools",
                    "description": "Specify which tool to use for short-read quality control. This will remove adapters, trim low quality bases, remove reads that are too short, etc. Choose 'DO_NOT_RUN' if you don't want this step performed. Default: fastp",
                    "advanced": true
                },
                "shortread_qc_skipadaptertrim": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip adapter trimming",
                    "help_text": "Skip the removal of sequencing adapters. \n\nThis often can be useful to speed up run-time of the pipeline when analysing data downloaded from public databases such as the ENA or SRA, as adapters should already be removed (however we recommend to check FastQC results to ensure this is the case).",
                    "hidden": true
                },
                "shortread_qc_adapter1": {
                    "type": "string",
                    "fa_icon": "fas fa-grip-lines",
                    "description": "Specify adapter 1 nucleotide sequence",
                    "help_text": "Specify a custom forward or R1 adapter sequence to be removed from reads. \n\nIf not set, the selected short-read QC tool's defaults will be used.\n\n> Modifies tool parameter(s):\n> - fastp: `--adapter_sequence`. fastp default: `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`\n> - AdapterRemoval: `--adapter1`. AdapteRemoval2 default: `AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG`",
                    "hidden": true
                },
                "shortread_qc_adapter2": {
                    "type": "string",
                    "fa_icon": "fas fa-grip-lines",
                    "description": "Specify adapter 2 nucleotide sequence",
                    "help_text": "Specify a custom reverse or R2 adapter sequence to be removed from reads. \n\nIf not set, the selected short-read QC tool's defaults will be used.\n\n> Modifies tool parameter(s):\n> - fastp: `--adapter_sequence`. fastp default: `AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT`\n> - AdapterRemoval: `--adapter1`. AdapteRemoval2 default: `AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT`",
                    "hidden": true
                },
                "shortread_qc_adapterlist": {
                    "type": "string",
                    "description": "Specify a list of all possible adapters to trim. Overrides --shortread_qc_adapter1/2. Formats: .txt (AdapterRemoval) or .fasta. (fastp).",
                    "help_text": "Allows to supply a file with a list of adapter (combinations) to remove from all files. \n\nOverrides the --shortread_qc_adapter1/--shortread_qc_adapter2 parameters . \n\nFor AdapterRemoval this consists of a two column table with a `.txt` extension: first column represents forward strand, second column for reverse strand. You must supply all possible combinations, one per line, and this list is applied to all files. See AdapterRemoval documentation for more information.\n\nFor fastp this consists of a standard FASTA format with a `.fasta`/`.fa`/`.fna`/`.fas` extension. The adapter sequence in this file should be at least 6bp long, otherwise it will be skipped. fastp trims the adapters present in the FASTA file one by one.\n\n> Modifies AdapterRemoval parameter: --adapter-list\n> Modifies fastp parameter: --adapter_fasta",
                    "fa_icon": "fas fa-th-list",
                    "hidden": true
                },
                "shortread_qc_mergepairs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on merging of read pairs for paired-end data",
                    "help_text": "Turn on the merging of read-pairs of paired-end short read sequencing data. \n\n> Modifies tool parameter(s):\n> - AdapterRemoval: `--collapse`\n> - fastp: `-m --merged_out`\n",
                    "hidden": true
                },
                "shortread_qc_includeunmerged": {
                    "type": "boolean",
                    "fa_icon": "far fa-times-circle",
                    "description": "Include unmerged reads from paired-end merging in the downstream analysis",
                    "help_text": "Turns on the inclusion of unmerged reads in resulting FASTQ file from merging paired-end sequencing data when using `fastp` and/or `AdapterRemoval`. For `fastp` this means the unmerged read pairs are directly included in the output FASTQ file. For `AdapterRemoval`, additional output files containing unmerged reads are all concatenated into one file by the workflow.\n\nExcluding unmerged reads can be useful in cases where you prefer to have very short reads (e.g. aDNA), thus excluding longer-reads or possibly faulty reads where one of the pair was discarded.\n\n> Adds `fastp` option: `--include_unmerged`\n",
                    "hidden": true
                },
                "shortread_qc_minlength": {
                    "type": "integer",
                    "default": 15,
                    "fa_icon": "fas fa-ruler-horizontal",
                    "description": "Minimum read length to retain during short read QC. Reads shorter than this will be discarded. Default: 15bp",
                    "help_text": "Specifying a mimum read length filtering can speed up profiling by reducing the number of short unspecific reads that need to be match/aligned to the database.\n\n> Modifies tool parameter(s):\n> - removed from reads `--length_required`\n> - AdapterRemoval: `--minlength`",
                    "advanced": true
                },
		"posttrim_qc": {
		    "type": "boolean",
		    "default": false,
		    "description": "Turn post-trim FASTQC off",
		    "help_text": "Turning this option to true will cause Post Trimming QC results to show up in the MultiQC report.",
		    "hidden": true
		},
                "shortread_complexityfilter_tool": {
                    "type": "string",
                    "default": "bbduk",
                    "enum": ["bbduk", "prinseqplusplus", "fastp", "DO_NOT_RUN"],
                    "fa_icon": "fas fa-hammer",
                    "description": "Specify which tool to use for complexity filtering. This will remove low complexity or highly repetitive sequences that are often not informative. Choose 'DO_NOT_RUN' if you don't want this step performed. Default: bbduk",
                    "advanced": true
                },
                "shortread_complexityfilter_entropy": {
                    "type": "number",
                    "default": 0.3,
                    "fa_icon": "fas fa-random",
                    "description": "Specify the minimum sequence entropy level for complexity filtering",
                    "help_text": "Specify the minimum 'entropy' value for complexity filtering for BBDuk or PRINSEQ++.\n\nNote that this value will only be used for PRINSEQ++ if `--shortread_complexityfilter_prinseqplusplus_mode` is set to `entropy`.\n\nEntropy here corresponds to the amount of sequence variation exists within the read. Higher values correspond to more variety, and thus will likely reslut in more specific matching to a taxon's reference genome. The trade off here is fewer reads (or abundance information) available for having a confident identification.\n\n\n> Modifies tool parameter(s):\n> - BBDuk: `entropy=`\n> - PRINSEQ++:  `-lc_entropy`\n\n",
                    "hidden": true
                },
                "shortread_complexityfilter_bbduk_windowsize": {
                    "type": "integer",
                    "default": 50,
                    "fa_icon": "far fa-window-maximize",
                    "description": "Specify the window size for BBDuk complexity filtering",
                    "help_text": "Specify the window size to calculate the level entropy within for BBDuk.\n\n> Modifies tool parameter(s):\n> - BBDuk: `entropywindow=`",
                    "hidden": true
                },
                "shortread_complexityfilter_bbduk_mask": {
                    "type": "boolean",
                    "fa_icon": "fas fa-mask",
                    "description": "Turn on masking rather than discarding of low complexity reads for BBduk",
                    "help_text": "Turn on masking of low-complexity reads (i.e., replacement with `N`) rather than removal.\n\n> Modifies tool parameter(s)\n> - BBDuk: `entropymask=`",
                    "hidden": true
                },
                "shortread_complexityfilter_fastp_threshold": {
                    "type": "integer",
                    "default": 30,
                    "fa_icon": "fas fa-sort-numeric-down",
                    "description": "Specify the minimum complexity filter threshold of fastp",
                    "help_text": "Specify the minimum sequence complexity value for fastp. This value corresponds to the percentage of bases that is different from it's adjacent bases.\n\n> Modifies tool parameter(s):\n> - removed from reads `--complexity_threshold`",
                    "hidden": true
                },
                "shortread_complexityfilter_prinseqplusplus_mode": {
                    "type": "string",
                    "default": "entropy",
                    "enum": ["entropy", "dust"],
                    "fa_icon": "fas fa-check-square",
                    "description": "Specify the complexity filter mode for PRINSEQ++",
                    "hidden": true
                },
                "shortread_complexityfilter_prinseqplusplus_dustscore": {
                    "type": "number",
                    "default": 0.5,
                    "fa_icon": "fas fa-head-side-mask",
                    "description": "Specify the minimum dust score for PRINTSEQ++ complexity filtering",
                    "help_text": "Specify the minimum dust score below which low-complexity reads will be removed. A DUST score is based on how often different tri-nucleotides occur along a read.\n\n> Modifies tool parameter(s):\n> - PRINSEQ++: `--lc_dust`",
                    "hidden": true
                },
                "save_complexityfiltered_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save reads from samples that went through the complexity filtering step",
                    "help_text": "Specify whether to save the final complexity filtered reads in your results directory (`--outdir`).",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-compress-alt"
        },
        "preprocessing_long_read_qc_options": {
            "title": "Preprocessing long-read QC options",
            "type": "object",
            "description": "Options for adapter clipping, quality trimming, and length filtering",
            "default": "",
            "properties": {
                "perform_longread_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turns on long read quality control steps (adapter clipping, length filtering etc.)",
                    "help_text": "Turns on long read quality control steps (adapter clipping, length and/or quality filtering.)\n\nRemoving adapters (if present) is recommend to reduce false-postive hits that may occur from 'dirty' or 'contaminated' reference genomes in a profiling database that contain accidentially incorporated adapter sequences.\n\nLength filtering, and quality filtering can speed up alignment by reducing the number of unspecific reads that need to be aligned.",
                    "hidden": true
                },
                "longread_qc_skipadaptertrim": {
                    "type": "boolean",
                    "description": "Skip long-read trimming",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Skip removal of adapters by Porechop. This can be useful in some cases to speed up run time - particularly when you are running data downloading from public databases such as the ENA/SRA that should already have adapters removed. We recommend that you check your FastQC results this is indeed the case.",
                    "hidden": true
                },
                "longread_qc_skipqualityfilter": {
                    "type": "boolean",
                    "description": "Skip long-read length and quality filtering",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Skip removal of quality filtering with Filtlong. This will skip length, percent reads, and target bases filtering (see other `--longread_qc_qualityfilter_*` parameters).",
                    "hidden": true
                },
                "longread_qc_qualityfilter_minlength": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Specify the minimum length of reads to be retained",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "help_text": "Specify the minimum of length of reads to be kept for downstream analysis.\n\n> Modifies tool parameter(s):\n> - Filtlong: `--min_length`",
                    "hidden": true
                },
                "longread_qc_qualityfilter_keeppercent": {
                    "type": "integer",
                    "default": 90,
                    "description": "Specify the percent of high-quality bases to be retained",
                    "fa_icon": "fas fa-percentage",
                    "help_text": "Throw out the remaining percentage of reads outside the value. This is measured by bp, not by read count. So this option throws out the worst e.g. 10% of read bases if the parameter is set to `90`.  _Modified from [Filtlong documentation](https://github.com/rrwick/Filtlong)_\n\n> Modifies tool parameter(s):\n> - Filtlong: `--keep_percent`",
                    "hidden": true
                },
                "longread_qc_qualityfilter_targetbases": {
                    "type": "integer",
                    "default": 500000000,
                    "description": "Specify the number of high-quality bases in the library to be retained",
                    "fa_icon": "fas fa-bullseye",
                    "help_text": "Removes the worst reads until only the specified value of bases remain, useful for very large read sets. If the input read set is less than the specified value, this setting will have no effect. _Modified from [Filtlong documentation](https://github.com/rrwick/Filtlong)_\n\n> Modifies tool parameter(s):\n> - Filtlong: `--keep_percent`",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-expand-alt"
        },
        "preprocessing_host_removal_options": {
            "title": "Preprocessing host removal options",
            "type": "object",
            "description": "Options for pre-profiling host read removal",
            "default": "",
            "properties": {
                "perform_shortread_hostremoval": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on short-read host removal",
                    "help_text": "Turns on the ability to remove short-reads from the that derived from a known organism, using Bowtie2 and samtools\n\nThis subworkflow is useful to remove reads that may come from a host, or a known contamination like the human reference genome. Human DNA contamination of (microbial) reference genomes is well known, so removal of these prior profiling both reduces the risks of false positives, and in _some cases_ a faster runtime (as less reads need to be profiled).\n\nAlternatively, you can include the reference genome within your profiling databases and can turn off this subworkflow, with the trade off of a larger taxonomic profiling database.",
                    "hidden": true
                },
                "perform_longread_hostremoval": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on long-read host removal",
                    "help_text": "Turns on the ability to remove long-reads from the that derived from a known organism, using minimap2 and samtools\n\nThis subworkflow is useful to remove reads that may come from a host, or a known contamination like the human reference genome. Human DNA contamination of (microbial) reference genomes is well known, so removal of these prior profiling both reduces the risks of false positives, and in _some cases_ a faster runtime (as less reads need to be profiled).\n\nAlternatively, you can include the reference genome within your profiling databases and can turn off this subworkflow, with the trade off of a larger taxonomic profiling database.",
                    "hidden": true
                },
                "hostremoval_reference": {
                    "type": "string",
                    "fa_icon": "fas fa-file-alt",
                    "description": "Specify path to single reference FASTA of host(s) genome(s)",
                    "help_text": "Specify a path to the FASTA file (optionally gzipped) of the reference genome of the organism to be removed.\n\nIf you have two or more host organisms or contaminants you wish to remove, you can concatenate the FASTAs of the different taxa into a single one to provide to the pipeline.",
                    "hidden": true
                },
                "shortread_hostremoval_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Specify path to the directory containing pre-made BowTie2 indexes of the host removal reference",
                    "help_text": "Specify the path to a _directory_ containing pre-made Bowtie2 reference index files (i.e. the directory containing `.bt1`, `.bt2` files etc.). These should sit in the same directory alongside the the reference file specified in `--hostremoval_reference`.\n\nSpecifying premade indices can speed up runtime of the host-removal step, however if not supplied the pipeline will generate the indices for you.",
                    "hidden": true
                },
                "longread_hostremoval_index": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Specify path to a pre-made Minimap2 index file (.mmi) of the host removal reference",
                    "help_text": "Specify path to a pre-made Minimap2 index file (.mmi) of the host removal reference file given to `--hostremoval_reference`.\n\nSpecifying a premade index file can speed up runtime of the host-removal step, however if not supplied the pipeline will generate the indices for you.",
                    "hidden": true
                },
                "save_hostremoval_index": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save mapping index of input reference when not already supplied by user",
                    "help_text": "Save the output files of the in-built indexing of the host genome.\n\nThis is recommend to be turned on if you plan to use the same reference genome multiple times, as supplying the directory or file to `--shortread_hostremoval_index` or `--longread_hostremoval_index` respectively can speed up runtime of future runs. Once generated, we recommend you place this file _outside_ of your run results directory in a central 'cache' directory you and others using your machine can access and supply to the pipeline.",
                    "hidden": true
                },
                "save_hostremoval_bam": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Saved mapped and unmapped reads in BAM format from host removal",
                    "help_text": "Save the reads mapped to the reference genome and off-target reads in BAM format as output by the respective hostremoval alignment tool.\n\nThis can be useful if you wish to perform other analyses on the host organism (such as host-microbe interaction), however, you should consider whether the default mapping parameters of Bowtie2 (short-read) or minimap2 (long-read) are optimised to your context.",
                    "hidden": true
                },
                "save_hostremoval_unmapped": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save reads from samples that went through the host-removal step",
                    "help_text": "Save only the reads NOT mapped to the reference genome in FASTQ format (as exported from `samtools view` and `bam2fq`).\n\nThis can be useful if you wish to perform other analyses on the off-target reads from the host mapping, such as manual profiling or _de novo_ assembly.",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-user-times"
        },
        "preprocessing_run_merging_options": {
            "title": "Preprocessing run merging options",
            "type": "object",
            "description": "Options for per-sample run-merging",
            "default": "",
            "properties": {
                "perform_runmerging": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on run merging",
                    "help_text": "Turns on the concatenation of sequencing runs or libraries with the same sample name.\n\nThis can be useful to ensure you get a single profile per sample, rather than one profile per run or library. Note that in some cases comparing profiles of independent _libraries_ may be useful, so this parameter may not always be suitable.  ",
                    "hidden": true
                },
                "save_runmerged_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save reads from samples that went through the run-merging step",
                    "help_text": "Save the run- and library-concatenated reads of a given sample in FASTQ format.\n\n> \u26a0\ufe0f Only samples that went through the run-merging step of the pipeline will be stored in the resulting directory. \n\nIf you wish to save the files that go to the classification/profiling steps for samples that _did not_ go through run merging, you must supply the appropriate upstream `--save_<preprocessing_step>` flag.\n\n",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-clipboard-check"
        },
        "profiling_options": {
            "title": "Profiling options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "centrifuge_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Centrifuge-aligned reads",
                    "help_text": "Save mapped (SAM, FASTQ) and unmapped (FASTQ) reads from alignment step of centrifuge in your output results directory.\n\n> Modifies tool parameter(s):\n> - centrifuge: `--un-gz`, `--al-gz`, `--un-conc-gz`, `--al-conc-gz`, `--out-fmt`",
                    "hidden": true
                },
                "diamond_output_format": {
                    "type": "string",
                    "default": "tsv",
                    "enum": ["blast", "xml", "txt", "daa", "sam", "tsv", "paf"],
                    "fa_icon": "fas fa-file",
                    "description": "Specify output format from DIAMOND profiling.",
                    "help_text": "DIAMOND can produce output in a number of different formats, you can specify here which to produce.\n\nNote that DIAMOND can only produce one format at a time, and depending on which you pick, some downstream steps may not be executed. For example, selecting `daa` or `sam` will mean you will not get a tabular taxonomic profile as with the other tools.\n\nWill be overriden by `--diamond_save_reads.`\n\n> Modifies tool parameter(s):\n> - diamond blastx: `--outfmt`",
                    "hidden": true
                },
                "diamond_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of DIAMOND-aligned reads. Will override --diamond_output_format and no taxon tables will be generated",
                    "help_text": "Save aligned reads in SAM format from alignment step of DIAMOND in your output results directory.\n\nNote this explicitly overrides `--diamond_output_format` to produce the SAM file, and no taxon table will be generated.\n\n> Modifies tool parameter(s):\n> - DIAMOND: `--outfmt`",
                    "hidden": true
                },
                "kaiju_taxon_rank": {
                    "type": "string",
                    "default": "species",
                    "enum": ["phylum", "class", "order", "family", "genus", "species"],
                    "fa_icon": "fas fa-tag",
                    "description": "Specify taxonomic rank to be displayed in Kaiju taxon table",
                    "help_text": "Specify the taxonomic level(s) to be displayed in the resulting Kaiju taxon table, as generated by the kaiju2table helper tool.\n\nThis can be either a single level (e.g. `species`), or a comma separated list to display the full taxonomic path (e.g. `superkingdom,phylum,class,order,family,genus,species.`).\n\n> Modifies tool parameter(s):\n> - kaiju2table: `-l`",
                    "hidden": true
                },
                "kraken2_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Kraken2-aligned reads",
                    "help_text": "Save reads that do and do not have a taxonomic classification in your output results directory in FASTQ format.\n\n> Modifies tool parameter(s):\n> - kraken2: `--classified-out` and `--unclassified-out`",
                    "hidden": true
                },
                "kraken2_save_readclassification": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Kraken2 per-read taxonomic assignment file",
                    "help_text": "Save a text file that contains a list of each read that had a taxonomic assignment, with information on specific taxonomic taxonomic assignment that that read recieved.\n\n> Modifies tool parameter(s):\n> - kraken2: `--output`",
                    "hidden": true
                },
                "kraken2_save_minimizers": {
                    "type": "boolean",
                    "description": "Turn on saving minimizer information in the kraken2 report thus increasing to an eight column layout.",
                    "fa_icon": "fas fa-save",
                    "help_text": "Turn on saving minimizer information in the kraken2 report thus increasing to an eight column layout.\n\nAdds `--report-minimizer-data` to the kraken2 command.",
                    "hidden": true
                },
                "krakenuniq_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of KrakenUniq-aligned reads",
                    "help_text": "Save reads that do and do not have a taxonomic classification in your output results directory in FASTQ format.\n\n> Modifies tool parameter(s):\n> - krakenuniq: `--classified-out` and `--unclassified-out`",
                    "hidden": true
                },
                "krakenuniq_ram_chunk_size": {
                    "type": "string",
                    "default": "16G",
                    "description": "Specify how large to chunk database when loading into memory for KrakenUniq",
                    "fa_icon": "fas fa-database",
                    "help_text": "nf-core/taxprofiler utilises a 'low memory' option for KrakenUniq that can reduce the amount of RAM the process requires using the `--preloaded` option.\n\nA further extension to this option is that you can specify how large each chunk of the database should be that gets loaded into memory at any one time. You can specify the amount of RAM to chunk the database to with this parameter, and is particularly useful for people with limited computational resources.\n\nMore information about this parameter can be seen [here](https://github.com/fbreitwieser/krakenuniq/blob/master/README.md#new-release-v07).\n\n> Modifies KrakenUniq parameter: --preload-size\n\n",
                    "hidden": true
                },
                "krakenuniq_save_readclassifications": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of KrakenUniq per-read taxonomic assignment file",
                    "help_text": "Save a text file that contains a list of each read that had a taxonomic assignment, with information on specific taxonomic taxonomic assignment that that read recieved.\n\n> Modifies tool parameter(s):\n> - krakenuniq: `--output`",
                    "hidden": true
                },
                "malt_mode": {
                    "type": "string",
                    "default": "BlastN",
                    "fa_icon": "fas fa-check-square",
                    "description": "Specify which MALT alignment mode to use",
                    "help_text": "Specify which version of MALT alignment to use.\n\nBlastN is generally recommended (nucleotide-nucleotide alignment), but particularly for very short reads (such as aDNA), whereas BlastX mode is similar to DIAMOND and will translate the nucleotide to amino acid sequences. Note each type of alignment mode requires different parameters during database construction. Refer to the MALT manual for more information.\n\n> Modifies tool parameter(s):\n> - malt-run: `-mode` ",
                    "hidden": true
                },
                "malt_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of MALT-aligned reads",
                    "help_text": "Turns on saving of MALT aligned reads in SAM format.\n\nNote that the SAM format produce by MALT is not completely valid, and may not work with downstream tools.\n\n> Modifies tool parameter(s):\n> - malt-run: `--alignments`, `-za`",
                    "hidden": true
                },
                "malt_generate_megansummary": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on generation of MEGAN summary file from MALT results",
                    "help_text": "Turns on saving of MALT output in an additional MEGAN summary file (`.megan`) that can be loaded into the MEGAN metagenomic exploration tool.\n\nNote: this file is generated not directly from MALT but rather then MEGAN utility script `rma2info`.\n\n> Modifies tool parameter(s):\n> - rma2info: `-es`",
                    "hidden": true
                },
                "sourmash_kmersize": {
                    "type": "integer",
                    "default": 31,
                    "enum": [51,31,21],
                    "description": "Sourmash breaks reads down into k-mers which are compared against database for taxonomic assignment. Sourmash recommends k=31 for most cases. k=51 increase specificity at the expense of sensitivity, therefore should be used when most species in your samples have very closely related genomes in the database. k=21 is useful when species in your sample have no good reference genomes and you just want classification on the family level or above.",
		            "advanced": true
                },
                "sourmash_threshold_bp": {
                    "type": "integer",
                    "description": "Sourmash will only report a match to a genome in the database when the estimated overlap between sample and the reference is at least this many base pairs. Choose a smaller number to increase sensitivity to low abundant species or small genomes like virus. Default is 5,000bp.",
                    "default": 5000,
                    "minimum": 1000,
                    "maximum": 1000000,
		            "advanced": true
                },
                "sourmash_trim_low_abund": {
                    "type": "boolean",
                    "description": "Runs trim-low-abund.py from the khmer software package, which removes low abundance, potentially erroneous kmers from data before taxonomy assignment. Only applies when sourmash databases were selected.",
                    "default": false,
                    "advanced": true
                },
                "motus_use_relative_abundance": {
                    "type": "boolean",
                    "description": "Turn on printing relative abundance instead of counts.",
                    "hidden": true
                },
                "motus_save_mgc_read_counts": {
                    "type": "boolean",
                    "description": "Turn on saving the mgc reads count.",
                    "hidden": true
                },
                "motus_remove_ncbi_ids": {
                    "type": "boolean",
                    "description": "Turn on removing NCBI taxonomic IDs.",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-align-center"
        },
        "postprocessing_and_visualisation_options": {
            "title": "Postprocessing and visualisation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "lowread_filter": {
                    "type": "integer",
                    "description": "Applies a read count filter for samples before downstream analysis. Samples must have at least this many reads with assigned taxonomy to be included in analyses such as alpha and beta diversity. Default is 50,000.",
                    "default": 1000,
                    "minimum": 0,
                    "advanced": true
                },
                "min_frequency": {
                    "type": "integer",
                    "default": 1,
                    "description": "Removes taxa with fewer than this many total reads assigned among all samples. Default setting of 1 means this filter is disabled, and all taxa will be kept.",
                    "minimum": 1,
                    "advanced": true
                },
                "min_samples": {
                    "type": "integer",
                    "default": 1,
                    "description": "Remove taxa that were detected in fewer than this many samples. Default setting of 1 means this filter is disabled, and all taxa will be kept.",
                    "minimum": 1,
                    "advanced": true
                },
		"qiime_tax_agglom_max": {
		    "type": "integer",
		    "description": "There are seven levels of taxonomy rankings: kingdom[1], phylum[2], class[3], order[4], family[5], genus[6], and species[7]. ANCOMBC and heatmap analysis will be conducted at the levels between this maximum parameter and the qiime minimum taxa parameter. Default is 7, species level.",
		    "default": 7,
		    "minimum": 2,
		    "maximum": 7,
		    "hidden": true
		},
		"qiime_tax_agglom_min": {
	            "type": "integer",
		    "description": "There are seven levels of taxonomy rankings: kingdom[1], phylum[2], class[3], order[4], family[5], genus[6], and species[7]. ANCOMBC and heatmap analysis will be conducted at the levels between this minimum parameter and the qiime maximum taxa parameter. Default is 7, species level.",
		    "default": 1,
		    "minimum": 1,
		    "maximum": 7,
		    "hidden": true
		},
		"ancombc_fdr_cutoff": {
		    "type": "number",
		    "default": 0.05,
		    "description": "FDR threshold for a taxa to be considered significant and displayed on the ANCOM-BC plot",
		    "help_text": "FDR threshold for a taxa to be considered significant and displayed on the ANCOM-BC plot",
		    "minimum": 0,
		    "maximum": 1,
		    "advanced": true
	        },
                "skip_heatmap": {
                    "type": "boolean",
                    "description": "Remove off heatmap plot from MultiQC report",
                    "hidden": true
                },
                "skip_alpha_rarefaction": {
                    "type": "boolean",
                    "description": "Turn off alpha rarefaction analysis and remove Alpha Rarefaction plot from MultiQC report",
                    "hidden": true
                },
                "top_taxa": {
                    "type": "integer",
                    "description": "Specify the maximum number of top taxa from each sample you want to compare in QIIME_HEATMAP",
                    "default": 20,
                    "hidden": true
                },
                "group_of_interest": {
                    "type": "string",
                    "description": "Group(s) of taxa that are of specific interest. Abundances of these taxa will be summarized in a separate file and plotted in a separate section in the report to highlight these taxa.",
                    "default": "NONE",
                    "enum": ["NONE", "wastewater"],
                    "hidden": true
                },
                "skip_alphadiversity": {
                    "type": "boolean",
                    "description": "Turn off alpha diversity analysis and remove alpha diversity plot from MultiQC report",
                    "hidden": true
                },
                "skip_individalpha" : {
                    "type": "boolean",
                    "description": "Turn off the chart showing individual alpha diversity per sample.",
                    "default": true,
                    "hidden": true
                },
                "skip_betadiversity": {
                    "type": "boolean",
                    "description": "Turn off beta diversity analysis and remove beta diversity plot from MultiQC reports",
                    "hidden": true
                },
                "run_profile_standardisation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on standardisation of taxon tables across profilers",
                    "help_text": "Turns on standardisation of output OTU tables across all tools; each into a TSV format following the following scheme:\n\n|TAXON   | SAMPLE_A | SAMPLE_B |\n|-------------|----------------|-----------------|\n| taxon_a | 32               | 123             |\n| taxon_b | 1                 | 5                 |\n\nThis currently only is generated for mOTUs.",
                    "hidden": true
                },
                "standardisation_motus_generatebiom": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on generation of BIOM output (currently only applies to mOTUs)",
                    "help_text": "Turn on the saving of the taxonomic output in BIOM format (`.biom`) in the results directory of your pipeline run, instead of the default TSV format.\\n\\nNote this file is from the output of the `motus merge` command.\\n\\n> Modifies tool parameter(s):\\n> - `-B -o`",
                    "hidden": true
                },
                "run_krona": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on generation of Krona plots for supported profilers",
                    "help_text": "Turn on the generation of Krona interactive pie-chart HTMLs for a selection of profilers.\n\nThe tools currently supported are:\n\n- centrifuge\n- kraken2\n- kaiju\n- MALT",
                    "hidden": true
                },
                "krona_taxonomy_directory": {
                    "type": "string",
                    "fa_icon": "fas fa-folder-open",
                    "description": "Specify path to krona taxonomy directories (required for MALT krona plots)",
                    "help_text": "Specify a path to a Krona taxonomy database directory (i.e. a directory containing a krona generated `.tab` file).\n\nThis is only required for generating Krona plots of MALT output.\n\nNote this taxonomy database must be downloaded and generated with the `updateTaxonomy.sh` script from the krona-tools package.",
                    "hidden": true
                },
                "standardisation_taxpasta_format": {
                    "type": "string",
                    "default": "tsv",
                    "fa_icon": "fas fa-pastafarianism",
                    "description": "The desired output format.",
                    "enum": ["tsv", "csv", "arrow", "parquet", "biom"],
                    "hidden": true
                },
                "taxpasta_taxonomy_dir": {
                    "type": "string",
                    "description": "The path to a directory containing taxdump files.",
                    "help_text": "This arguments provides the path to the directory containing taxdump files. At least nodes.dmp and names.dmp are required. A merged.dmp file is optional. \n\nModifies tool parameter(s):\n-taxpasta: `--taxpasta_taxonomy_dir`",
                    "fa_icon": "fas fa-tree",
                    "hidden": true
                },
                "taxpasta_add_name": {
                    "type": "boolean",
                    "description": "Add the taxon name to the output.",
                    "help_text": "The standard output format of taxpasta is a two-column table including the read counts and the integer taxonomic ID. The taxon name can be added as additional information to the output table.\n\nModifies tool parameter(s):\n- taxpasta: `--taxpasta_add_name`",
                    "fa_icon": "fas fa-tag",
                    "hidden": true
                },
                "taxpasta_add_rank": {
                    "type": "boolean",
                    "description": "Add the taxon rank to the output.",
                    "help_text": "The standard output format of taxpasta is a two-column table including the read counts and the integer taxonomic ID. The taxon rank can be added as additional information to the output table.\n\nModifies tool parameter(s):\n- taxpasta: `--taxpasta_add_rank`",
                    "fa_icon": "fas fa-sort-amount-down-alt",
                    "hidden": true
                },
                "taxpasta_add_lineage": {
                    "type": "boolean",
                    "description": "Add the taxon's entire name lineage to the output.",
                    "help_text": "\nThe standard output format of taxpasta is a two-column table including the read counts and the integer taxonomic ID. The taxon's entire lineage with the taxon names separated by semi-colons can be added as additional information to the output table.\n\nModifies tool parameter(s):\n- taxpasta: `--taxpasta_add_lineage`\n",
                    "fa_icon": "fas fa-link",
                    "hidden": true
                },
                "taxpasta_add_idlineage": {
                    "type": "boolean",
                    "description": "Add the taxon's entire ID lineage to the output.",
                    "help_text": "\nThe standard output format of taxpasta is a two-column table including the read counts and the integer taxonomic ID. The taxon's entire lineage with the taxon identifiers separated by semi-colons can be added as additional information to the output table.\n\nModifies tool parameter(s):\n- taxpasta: `--taxpasta_add_idlineage`\n",
                    "fa_icon": "fas fa-link",
                    "hidden": true
                }
            },
            "fa_icon": "fas fa-chart-line"
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "120.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "ignore_failed_samples": {
                    "type": "boolean",
                    "description": "Whether to ignore samples that fail QC and taxonomy profiling steps and carry on with good samples. Default True. Set to False to force the pipeline to abort when any samples fails.",
                    "default": true,
                    "hidden": true
                },
                "report_name": {
                    "type": "string",
                    "description": "Name for report title and report file name.",
                    "hidden": true
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "amr_options": {
            "title": "AMR analysis options",
            "type": "object",
            "description": "Options related to AMR analysis.",
            "properties": {
                "run_amr": {
                    "type": "boolean",
                    "description": "Whether or not to conduct analysis for antimicrobial resistance genes.",
                    "default": false
                },
                "resistome_threshold": {
                    "type": "number",
                    "description": "The minimum proportion of nucleotides that have aligned reads to for any AMR gene to be reported.",
                    "default": 0.8,
                    "minimum": 0,
                    "maximum": 1,
                    "advanced": true
                },
                "amr_index_files": {
                    "type": "string",
                    "description": "Path to files related to AMR analysis.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/preprocessing_general_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_short_read_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_long_read_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_host_removal_options"
        },
        {
            "$ref": "#/definitions/preprocessing_run_merging_options"
        },
        {
            "$ref": "#/definitions/profiling_options"
        },
        {
            "$ref": "#/definitions/postprocessing_and_visualisation_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/amr_options"
        }
    ]
}
